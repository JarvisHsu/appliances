/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-08-15 10:00:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class begin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>自动跳转</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<p hidden>\r\n");
      out.write("    离自动跳转还有\r\n");
      out.write("<p hidden id=\"Time\">1</p>\r\n");
      out.write("<p hidden>S</p>\r\n");
      out.write("</p>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("    //使用匿名函数方法\r\n");
      out.write("    function countDown() {\r\n");
      out.write("        var time = document.getElementById(\"Time\");\r\n");
      out.write("        //获取到id为time标签中的内容，现进行判断\r\n");
      out.write("        if (time.innerHTML <= 1) {\r\n");
      out.write("            //等于0时清除计时\r\n");
      out.write("            post(\"loginView\")\r\n");
      out.write("            // window.location.href=\"https://www.baidu.com\";\r\n");
      out.write("            // rel=\"external nofollow\" ;\r\n");
      out.write("        } else {\r\n");
      out.write("            time.innerHTML = time.innerHTML - 1;\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //1000毫秒调用一次\r\n");
      out.write("    window.setInterval(\"countDown()\", 1000);\r\n");
      out.write("\r\n");
      out.write("    //post请求通用跳转页面\r\n");
      out.write("    function post(url, params) {\r\n");
      out.write("        // 创建form元素\r\n");
      out.write("        var temp_form = document.createElement(\"form\");\r\n");
      out.write("        // 设置form属性\r\n");
      out.write("        temp_form.action = url;\r\n");
      out.write("        temp_form.target = \"_self\";\r\n");
      out.write("        temp_form.method = \"post\";\r\n");
      out.write("        temp_form.style.display = \"none\";\r\n");
      out.write("        // 处理需要传递的参数\r\n");
      out.write("        for (var x in params) {\r\n");
      out.write("            var opt = document.createElement(\"textarea\");\r\n");
      out.write("            opt.name = x;\r\n");
      out.write("            opt.value = params[x];\r\n");
      out.write("            temp_form.appendChild(opt);\r\n");
      out.write("        }\r\n");
      out.write("        document.body.appendChild(temp_form);\r\n");
      out.write("        // 提交表单\r\n");
      out.write("        temp_form.submit();\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
